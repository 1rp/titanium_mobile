import os, sys, platform, glob, shutil
Import("env cwd version")

#TODO enable map - eventually detect these
modules = ['accelerometer', 'api', 'app', 'database', 'filesystem', 'geolocation', 'json', 'media', 'network', 'platform', 'ui']

print "Building Titanium Mobile (Android) %s..." % version

if platform.platform() == 'Windows':
	default_android_sdk = 'C:\\android-sdk'
else:
	default_android_sdk = '/opt/android-sdk'

android_sdk = ARGUMENTS.get("android_sdk", default_android_sdk)

classpath = [ os.path.join(cwd, 'android', 'titanium', 'lib', 'js.jar'),
	os.path.join(android_sdk, 'platforms', 'android-1.6', 'android.jar'),
	os.path.join(cwd, 'android', 'titanium', 'lib', 'commons-codec-1.3.jar'),
	os.path.join(cwd, 'android', 'titanium', 'lib', 'commons-logging-1.1.1.jar')]

sources = [os.path.join('titanium', 'src'), os.path.join('titanium', 'thirdparty')]

env.Append(JAVASOURCEPATH=os.path.join('titanium','src'))
env.Append(JAVACLASSPATH=classpath)

titanium_src_dir = os.path.join(cwd, 'android', 'titanium', 'src')
classes_dir = os.path.join(cwd, 'dist', 'android', 'classes')

#copy non-Java files into classes
def copy_resources(src_dir, dest_dir):
	resources = []
	for root, dirs, files in os.walk(src_dir):
		for file in files:
			if not file.endswith(".java"):
				relative_path = os.path.join(root[len(src_dir)+1:], file)
				file_path = os.path.join(root, file)
				dest_path = os.path.join(dest_dir, os.path.dirname(relative_path))
				if not os.path.exists(dest_path):
					os.makedirs(dest_path)
				dest_file = os.path.join(dest_dir, relative_path)
				shutil.copy(file_path, dest_file)
				resources.append(dest_file)
	return resources

classes = env.Java(target = 'classes', source = sources)
env.Jar(target = 'titanium.jar', source = classes + copy_resources(titanium_src_dir, classes_dir))

for module in modules:
	module_sources = os.path.join('modules', module, 'src')
	env.Java(target = 'classes', source = module_sources, JAVACLASSPATH = classpath + [classes_dir])
	module_classes = [ os.path.join('classes', 'ti', 'modules', 'titanium', module) ]
	module_resources = copy_resources(os.path.join(cwd, 'android', 'modules', module, 'src'), classes_dir)
	env.Jar(target = 'titanium-%s.jar' % module,
		source = module_classes + module_resources, JARCHDIR=classes_dir)

