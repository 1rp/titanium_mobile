#!/usr/bin/env python
import os,sys,shutil,platform,subprocess
import SCons.Variables
import SCons.Environment

cwd = os.path.dirname(os.path.abspath(sys._getframe(0).f_code.co_filename))

try:
	# pull in the version from the top-level SConstruct
	Import('version')
except:
	if ARGUMENTS.get('PRODUCT_VERSION', 0):
		version = ARGUMENTS['PRODUCT_VERSION']
	else:
		version = '0.0.0'

def KReplaceVars(target, replacements):
	target = str(target)
	txt = open(target).read()
	for k, v in replacements.iteritems():
		txt = txt.replace(k, v)
	out = open(target, 'w')
	out.write(txt)
	out.close()

def KReplaceVarsStr(target, replacements):
	return 'KReplaceVars(%s, %s)' % (target, replacements)
ReplaceVarsAction = SCons.Action.ActionFactory(KReplaceVars, KReplaceVarsStr)

def KJar():
    template_dir = os.path.abspath(os.path.dirname(sys._getframe(0).f_code.co_filename))
    cwd = os.getcwd()
    try:
        target = os.path.join(template_dir,'bin','titanium.jar')
        print os.path.join(template_dir,'bin','classes')
        os.chdir(os.path.join(template_dir,'bin','classes'))
        os.system("jar cvf \"%s\" *" % (target))
    finally:
        os.chdir(cwd)

def KJarStr():
    return 'KJar()'
JarAction = SCons.Action.ActionFactory(KJar,KJarStr)

replacements = {'TI_VERSION':version}
env = Environment()
if platform.system() == "Windows":
	env["JAVAC"] = os.path.join(os.environ['JAVA_HOME'],'bin','javac.exe')

targets = []
for f in Glob('src/org/appcelerator/titanium/js/*.js'):
	fname = os.path.basename(str(f))
	target = env.Command(os.path.join('bin/classes/org/appcelerator/titanium/js', fname), f, Copy("bin/classes/org/appcelerator/titanium/js", "$SOURCE"))
	env.AddPostAction(target, ReplaceVarsAction(target[0], replacements))
	targets.append(target)
	
for f in Glob('src/org/appcelerator/titanium/res/drawable/*',strings=True):
	fname = os.path.basename(str(f))
	t = env.Command(os.path.join('bin/classes', fname), f, Copy("$TARGET", "$SOURCE"))
	targets.append(t)

android_sdk = '/opt/android-sdk'
if platform.system() == 'Windows':
	android_sdk = 'C:\\android-sdk'

android_jar = os.path.join(android_sdk, 'platforms', 'android-1.5', 'android.jar')
commons_logging_jar = os.path.join(cwd, 'lib', 'commons-logging-1.1.1.jar')

j = env.Java('bin/classes', 'src', JAVACFLAGS="-target 1.5 -classpath "+android_jar+os.pathsep+commons_logging_jar)
env.AddPostAction(j,JarAction())
env.Depends(j, targets)
